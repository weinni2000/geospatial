# Copyright 2023 ACSONE SA/NV

from odoo_test_helper import FakeModelLoader

from odoo.tests.common import TransactionCase


class TestModel(TransactionCase):
    @classmethod
    def setUpClass(cls):
        super().setUpClass()
        cls.loader = FakeModelLoader(cls.env, cls.__module__)
        cls.loader.backup_registry()

        from .models import DummyZip, GeoModelTest, RetailMachine

        cls.loader.update_registry((GeoModelTest, DummyZip, RetailMachine))
        cls.geo_model = cls.env["geo.model.test"].create({})
        cls.env["dummy.zip"].create(
            {
                "name": "1146",
                "city": "Mollens (VD))",
                "the_geom": "MULTIPOLYGON (((711089.693203108 5873735.48072837, "
                + "711092.576313001 5873519.88384687,"
                + "711067.054090924 5873435.51305599,710995.218898879 5873198.04330687,"
                + "710996.388615927 5873110.64387336,711039.179454242 5873060.22832024,"
                + "711042.287896265 5872936.43418925,711026.423105771 5872819.67065428,"
                + "711261.754450894 5872597.025222,711241.609394529 5872474.38185775,"
                + "711059.74912495 5872499.61499977,710956.020676372 5872329.22952511,"
                + "710692.244689654 5872290.70879558,710486.478264092 5871933.93784652,"
                + "710024.93171231 5872025.28274803,710005.024342666 5871778.82753806,"
                + "709728.110667306 5871639.59028651,709724.582871056 5871578.36223351,"
                + "709682.212415895 5871490.38595657,709610.808017364 5871402.01470814,"
                + "709552.306572401 5871356.73905814,709495.853317159 5871313.04976156,"
                + "709236.521364341 5871163.84756429,709195.304008703 5871128.42409022,"
                + "709150.409305552 5871089.84044459,709093.837273492 5871008.051534,"
                + "709008.015634898 5870883.97195414,708922.106609628 5870795.4022844,"
                + "708836.258869397 5870702.46391409,708174.672218121 5871197.33373336,"
                + "707846.164800298 5870800.97891085,707605.589841331 5870979.71730235,"
                + "706369.331113847 5871966.12906172,706306.149363559 5872332.34885008,"
                + "705390.804735349 5873401.94343156,704603.284854186 5873838.0955764,"
                + "704092.91256737 5873980.90856737,704011.87512573 5873857.35915706,"
                + "703030.73225885 5874621.40143472,702006.482932752 5874937.39404808,"
                + "702849.34839414 5875420.27638601,705799.405382342 5875341.31671473,"
                + "707632.65678248 5875553.44607092,708858.019414722 5875286.16417218,"
                + "709639.976192618 5874932.54154212,709800.865455979 5874636.00773277,"
                + "710188.467536495 5874437.27183537,710138.406154331 5874271.93819522,"
                + "710464.959230515 5874290.93364989,711089.693203108 5873735.48072837)\
                    ))",
            }
        )

        cls.env["dummy.zip"].create(
            {
                "name": "1169",
                "city": "Yens",
                "the_geom": "MULTIPOLYGON (((712499.646588959 5867275.9182732,"
                + "713419.026718887 5867001.27747293,714015.722251894 5866538.88540113,"
                + "714694.030364397 5866492.43868073,714765.262342783 5865922.7082706,"
                + "714997.785886538 5865558.90341594,715151.666992536 5865665.71173242,"
                + "715609.031373263 5865079.20249973,715885.038705088 5865053.65786512,"
                + "716495.789172412 5864492.40980924,716976.367311019 5864008.08379334,"
                + "716781.749152281 5863910.99389739,716608.651725694 5863833.09642092,"
                + "716518.052861577 5863201.78267731,716064.089435707 5863535.02734419,"
                + "715643.594094414 5862954.76617529,715325.079468014 5863244.60059218,"
                + "715203.241075229 5863130.96403033,715274.223325112 5862913.60004965,"
                + "714897.772002756 5862635.12980843,714563.017533803 5862610.39226806,"
                + "714258.266707042 5862620.95887512,714249.030777221 5862438.94330443,"
                + "713724.197313172 5862641.59763197,713517.069387174 5862507.90536999,"
                + "712861.144693087 5862860.12184101,713026.004126525 5862898.68588355,"
                + "712886.267874965 5863045.26900106,712827.103281182 5863131.79990304,"
                + "712738.929710136 5863217.94640341,712691.900706143 5863250.04961387,"
                + "712592.546151257 5863317.87261312,712504.368398659 5863404.01855574,"
                + "712405.215033586 5863533.04505435,712371.521154897 5863576.88960266,"
                + "712355.411589612 5863605.09059754,712223.007660214 5863836.87550522,"
                + "712156.578632893 5863923.31295655,712134.435332338 5863952.12551606,"
                + "712134.049617032 5863981.22835121,712079.319781245 5864066.52919356,"
                + "712059.980001849 5864096.67295644,712051.318250669 5864144.84287664,"
                + "712044.316598475 5864183.7895569,711908.743067266 5864560.40002656,"
                + "711809.521376786 5864821.06690256,711185.861440992 5865020.84754387,"
                + "710829.505021716 5865627.41104201,710236.389289627 5865815.90923937,"
                + "710091.432898977 5866557.84150433,709133.629951634 5866771.90114324,"
                + "709458.164419682 5866919.01207252,709913.809001053 5867137.78068809,"
                + "710889.333222594 5868419.19110438,711446.96086477 5867965.10731405,"
                + "711555.097159712 5867474.42262634,711838.254231148 5867572.85286263,"
                + "711873.968689887 5867287.95989594,712499.646588959 5867275.9182732)\
                    ))",
            }
        )

        cls.env["retail.machine"].create(
            {
                "name": "34",
                "total_sales": 734.0,
                "money_level": "low",
                "the_point": "POINT(711341.795470746 5866150.25857961)",
                "state": "ok",
            }
        )

        cls.env["retail.machine"].create(
            {
                "name": "33",
                "total_sales": 492.0,
                "money_level": "low",
                "the_point": "POINT(711652.69365366 5866548.27641024)",
                "state": "ok",
            }
        )

        cls.env["retail.machine"].create(
            {
                "name": "18",
                "total_sales": 892.0,
                "money_level": "high",
                "the_point": "POINT(708451.36372351 5872547.88349207)",
                "state": "ok",
            }
        )

        cls.env["retail.machine"].create(
            {
                "name": "23",
                "total_sales": 1781.0,
                "money_level": "high",
                "the_point": "POINT(708037.67602773 5873788.9465794)",
                "state": "ok",
            }
        )

        cls.env["retail.machine"].create(
            {
                "name": "21",
                "total_sales": 1533.0,
                "money_level": "high",
                "the_point": "POINT(706962.088018701 5873623.47150109)",
                "state": "ok",
            }
        )

    @classmethod
    def tearDownClass(cls):
        cls.loader.restore_registry()
        super().tearDownClass()

    def test_search_equals(self):
        zip_item = self.env["dummy.zip"].search([("city", "ilike", "Mollens (VD))")])

        result = zip_item.search(
            [
                (
                    "the_geom",
                    "geo_equal",
                    {"dummy.zip.the_geom": [("name", "ilike", "1146")]},
                ),
            ]
        )

        self.assertEqual(1, len(result))
        self.assertEqual(result.city, "Mollens (VD))")
